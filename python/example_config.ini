# configuration settings not settable in gui

[network]
MQTTHOST=127.0.0.1
live_data_uri=https://duckduckgo.com/

[visa]
visa_lib=@py

# stage and mux control box
[controller]
address=10.46.0.239

# source-measure unit
[smu]
address=ASRL/dev/ttyUSB0::INSTR
baud=57600
terminator=\n
# if front terminals is false, use rear terminals
front_terminals=False
# if 2 wire is false, use 4 wire
two_wire=False

[solarsim]
uri=none
#uri=wavelabs://127.0.0.1:3334

# lock-in amplifier
[lia]
address=none
#address=ASRL/dev/ttyUSB1::INSTR
output_interface=0
terminator=\r

[monochromator]
address=none
#address=ASRL/dev/ttyUSB2::INSTR
grating_change_wls=1200
filter_change_wls=370,640,715,765

# LED power supply unit
[psu]
#address=none
address=TCPIP0::10.46.0.190::INSTR
ch1_voltage=30
ch2_voltage=30
ch3_voltage=5

[stage]
# stage connection URI
# tells the system how to talk to the stage.
# format = controller-type://list,of,expected,travel,lengths,in,mm/steps_per_mm/extra_info
# typical steps per mm might be 256[uSteps/step] (microstepping driver property) * 200[steps/rev] (motor property) / 8[mm/rev] (leadscrew property) = 6400 [uSteps/mm]
# typical travel lengths might be X = 1000mm (stage length) - 125 (gantry width) = 875 and Y = 500mm (stage length) - 125 (gantry width) = 375
# the final field contains extra info for controlling the stage, for example "otter" tells the system to use a special homing procedure specific to one hardware setup
uri=us://125/6400

# list of experiment center positions in steps along each available axis 
[experiment_positions]
solarsim=5000000,1200000
eqe=1000000,1200000

# i-v-t measurement settings
[ivt]
# when using smart mode, start scan 1 and end scan 2 this many percent higher than Voc
# bigger numbers here give better fitting for series resistance at an incresed danger of pushing too much current through the device
percent_beyond_voc=25
# when using smart mode, end scan 1 and start scan 2 this much into reverse bias
# bigger numbers here give better fitting for shunt resistance at an incresed danger of pulling too much current from the device
# this is an absolute number whose sign is set depending on the sign of Voc
voltage_beyond_isc=0.1

# names of photodiodes to use to calibrate each experiment
# can be a list if more than one requied
# photodiode names are sections listed below containing all info required to use them
[calibration_photodiodes]
solarsim=pd1
eqe=pd1

# photodiode conncetion state and location info
[pd1]
# state whether photodiode is connected externally ("external") to the mux or
# internally ("internal") to the device array via a pcb adapter
connection=internal
# if internally connected, specify the device location in the array along each axis and
# the contact pad number, e.g. to select pixel 4 from the substrate in row 2, column 3
# in for a 2D device array, array_location=2,3,4
array_location=1,1,1
# if externally connected, specify the position of the stage along each available axis
# in steps
position=1010000,1200000

[substrates]
# list of number of substrates along each available axis e.g. rows,cols
number=5,4
# spacing in mm between substrate centers along each available axis
spacing=35,29
# List of PCB adapter names used in each substrate position, referenced in section
# names below.
# PCB adapter names must be unique, must be valid section names for Python's configparser,
# and not already in use as section names for other uses.
# If all pcbs are the same, this can be one value.
pcb_names=6px_1in_pcb
# List of available pixel layout names that are referenced in section names below.
# Layout names must be unique, must be valid section names for Python's configparser,
# and not already in use as section names for other uses.
#layout_names=6px_1in,4px_30mm
active_layout=6px_1in

# pcb adapter
[6px_1in_pcb]
# number of available pixels per pcb
pcb_contact_pads=6
# pcb adapter board idn resistor in Ohms
pcb_resistor=0

# pcb adapter
[6px_30mm_pcb]
# number of available pixels per pcb
pcb_contact_pads=6
# pcb adapter board idn resistor in Ohms
pcb_resistor=0

# pixel layout
[6px_1in]
# pcb adapter name
pcb_name=6px_1in_pcb
# pcb pin numbers to use
pixels=1,2,3,4,5,6
# Flat concatenated list of positions of each pixel in use on each substrate.
# Positions are given in mm relative to the substrate center.
# If the positions are multi-axis, the positions of each pixel in the list are given as
# vectors, e.g. for an x,y stage the list would be formatted as:
# pixel1_x,pixel1_y,pixel2_x,pixel2_y,...
# There should be a pixel position vector for every force pin on the adpater pcb, even
# for pixels that are unused. Unused pixels can set to 0.
positions=-5,-5,-5,5,0,-5,0,5,5,-5,5,5
# list of areas in cm^2 of each pixel on a substrate
areas=0.1,0.1,0.1,0.1,0.1,0.1

# pixel layout
[4px_30mm]
# pcb adapter name
pcb_name=6px_30mm_pcb
# pcb pin numbers to use
pixels=1,3,4,5
# Flat concatenated list of positions of each pixel in use on each substrate.
# Positions are given in mm relative to the substrate center.
# If the positions are multi-axis, the positions of each pixel in the list are given as
# vectors, e.g. for an x,y stage the list would be formatted as:
# pixel1_x,pixel1_y,pixel2_x,pixel2_y,...
# There should be a pixel position vector and area for every force pin on the adpater
# pcb, even for pixels that are unused. Unused pixels can set to 0.
positions=-6,-6,0,0,0,-6,0,6,6,-6,0,0
# list of areas in cm^2 of each pixel on a substrate
areas=0.15,0,1.0,0.15,0.15,0
