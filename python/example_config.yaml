# configuration settings not settable in gui
#
# Can make use of an !include tag with a file path to load additional config settings
# from other yaml files. If using the tag, load this file with PyYAML as follows:
#
# import yaml
# 
# def yaml_include(loader, node):
#     with file(node.value) as f:
#         return yaml.load(f)
#
# yaml.add_constructor("!include", yaml_include)  
# 
# with open("example_config.yaml", "r") as f:
#     config = yaml.load(f, Loader=yaml.FullLoader)  

# default start-up values for the plot inversion switches
plots:
    invert_voltage: false
    invert_current: false

mppt:
    presets:
        - "gd://"  # gradient descent algorithm with default parameters
        - "basic://" # basic tracking algorithm (alternating periods of exploration and dwell at vmpp) with default parameters
        - "gd://10:0.0001:10" # gd://alpha:min_step:NPLC --> alpha is the learning rate, min_step is the smallest possible voltage step, larger NPLC means slower, more accurate measurements
        - "basic://7:10" # basic://degrees:dwell_time --> larger degrees means wider exploration, larger dwell_time means longer dwell periods

# i-v-t measurement settings
ivt:
    # when using smart mode, start scan 1 and end scan 2 this many percent higher than Voc
    # bigger numbers here give better fitting for series resistance at an incresed danger of pushing too much current through the device
    percent_beyond_voc: 25
    # when using smart mode, end scan 1 and start scan 2 this much into reverse bias
    # bigger numbers here give better fitting for shunt resistance at an incresed danger of pulling too much current from the device
    # this is an absolute number whose sign is set depending on the sign of Voc
    voltage_beyond_isc: 0.1

network:
    MQTTHOST: "127.0.0.1"
    live_data_uri_1: "http://127.0.0.1:8051/"
    live_data_uri_2: "http://127.0.0.1:8052/"
    live_data_uri_3: "http://127.0.0.1:8053/"
    live_data_uri_4: "http://127.0.0.1:8054/"
    live_data_uri_5: "http://127.0.0.1:8055/"

visa:
    visa_lib: '@py'

# stage and mux controller
controller:
    address: "10.42.0.239"

# source-measure unit(s)
smu:
    active: true
    address: ASRL/dev/ttyS0::INSTR
    #address: GPIB::24::INSTR
    baud: 57600
    # "\r" = <CR>, "\r\n" = <CR+LF>, "\n" = <LF>, "\n\r" = <LF+CR>
    terminator: "\r"
    # if front terminals is false, use rear terminals
    front_terminals: false
    # if 2 wire is false, use 4 wire
    two_wire: false

solarsim:
    active: false
    #uri: wavelabs://0.0.0.0:3334
    uri: wavelabs-relay://127.0.0.1:3335
    recipes: ["am1_5_1_sun", "Christo Disco"]
#    spectral_calibration: !include example_solarsim_cal.yaml

# lock-in amplifier
lia:
    active: false
    address: ASRL/dev/ttyUSB1::INSTR
    terminator: "\r"
    baud: 9600
    output_interface: 0

monochromator:
    active: false
    address: ASRL/dev/ttyUSB2::INSTR
    terminator: "\r"
    baud: 9600
    grating_change_wls: [1200]
    filter_change_wls: [370, 640, 715, 765]

# LED power supply unit
psu:
    address: TCPIP0::192.168.1.235::INSTR
    terminator: "\r"
    baud: 9600
    ch1_voltage: 3.9
    ch2_voltage: 1.9
    ch3_voltage: 0
    ch1_ocp : 0.7
    ch2_ocp : 0.7
    ch3_ocp : 0.0

stage:
    active: true
    # stage connection URI
    # tells the system how to talk to the stage.
    # format = controller-type://list,of,expected,travel,lengths,in,mm/steps_per_mm/list of lists of keepout zones per axis/extra_info
    # typical travel lengths might be X = 1000mm (stage length) - 125 (gantry width) = 875 and Y = 500mm (stage length) - 125 (gantry width) = 375
    # typical steps per mm might be 256[uSteps/step] (microstepping driver property) * 200[steps/rev] (motor property) / 8[mm/rev] (leadscrew property) = 6400 [uSteps/mm]
    # the keepout zone list is a list (with of length matching the expected travel lengths), each item in the list is a list of length two specifying the regions along an axis that are not allowed
    # for example: [[],[62.5,Infinity]] means all values in X are okay, but anyplace beyond 62.5mm in Y is invalid
    # [[],[]] means no limits for either axis
    # the final field contains extra info for controlling the stage, for example "otter" tells the system to use a special homing procedure specific to one hardware setup
    uri: us://375/6400
    #uri: us://125/6400
    # approx mm/s
    speed: 29
    experiment_positions:
        solarsim: [174]
#        eqe: [800, 250]
    custom_positions: {"Load Position": [355], "Grey's fav spot": [88.54241], "Midway": [187.5], "Light center": [174], "Offline Position": [20]}

substrates:
  # list of number of substrates along each available axis: [x-direction, y-direction]
    #number: [4, 5]
    number: [8]
    # spacing in mm between substrate centers along each available axis
    #spacing: [35, 29]
    spacing: [40]
    # List of available pixel layout names. Additional info about each layout is given
    # it's named sub-section in the "layouts" sub-section below.
    layout_names: [6px_1in]
    # for clients that only accept one layout, use this layout
    active_layout: 6xbpw34_30mm

    # pixel layout info
    layouts:
        # layout name
        6px_1in:
            # pcb adapter name
            pcb_name: 6px_1in_pcb
            # pcb pin numbers to use
            pixels: [1, 2, 3, 4, 5, 6]
            # List of position vectors of each pixel in use on each substrate.
            # Positions are given in mm relative to the substrate center.
            # If the positions are multi-axis, the positions of each pixel in the list are given as
            # vectors, e.g. for an x,y stage the list would be formatted as:
            # [[pixel1_x, pixel1_y], [pixel2_x, pixel2_y], ...]
            # There should be a pixel position vector for every force pin on the adpater pcb, even
            # for pixels that are unused. Unused pixels can set to [0, ...].
            positions: [[-5, -5], [-5, 5], [0, -5], [0, 5], [5, -5], [5, 5]]
            # list of areas in cm^2 of each pixel on a substrate
            areas: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1]

        4px_30mm:
            pcb_name: 6px_30mm_pcb
            pixels: [1, 3, 4, 5]
            positions: [[-6, -6], [0, 0], [0, -6], [0, 6], [6, -6], [0, 0]]
            areas: [0.15, 0, 1.0, 0.15, 0.15, 0]
            
        # oxford photodiode boards
        6xbpw34_30mm:
            pcb_name: 6px_30mm_pcb
            pixels: [1, 2, 3, 4, 5, 6]
            positions: [[-7.5], [-7.5], [0], [0], [7.5], [7.5]]
            areas: [0.0702, 0.0702, 0.0702, 0.0702, 0.0702, 0.0702]
        
    # pcb adapter info
    adapters:
        6px_1in_pcb:
            # number of available pixels per pcb
            pcb_contact_pads: 6
            # pcb adapter board idn resistor in Ohms
            pcb_resistor: 0

        6px_30mm_pcb:
            pcb_contact_pads: 6
            pcb_resistor: 0    

# miscellaneous reference data
reference:
    # spectral irradiance data
    spectra: null
    # device calibration data
    calibration:
        eqe:
          wls: [350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900, 950, 1000, 1050, 1100]
          eqe: [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100]
